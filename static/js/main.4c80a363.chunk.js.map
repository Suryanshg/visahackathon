{"version":3,"sources":["assets/sampleCard.png","components/imgCarousel.jsx","pages/home.jsx","components/giftManager.jsx","pages/manageGifts.jsx","pages/login.jsx","pages/register.jsx","pages/createGift.jsx","components/navigationBar.jsx","components/footer.jsx","pages/viewGift.jsx","pages/search.jsx","App.js","serviceWorker.js","index.js","assets/pic1.jpg","assets/pic2.png","assets/pic3.jpg"],"names":["module","exports","ImgCarousel","Carousel","Item","className","src","img1","alt","Caption","id","Button","variant","size","href","active","img2","img3","Home","Fragment","Container","fluid","Row","Col","GiftManager","state","Card","Body","Title","Subtitle","Text","Component","ManageGifts","Login","Form","Group","controlId","Label","Control","type","placeholder","class","schema","yup","firstName","required","lastName","email","dob","phone","password","confirmPassword","oneOf","Register","validationSchema","onSubmit","console","log","initialValues","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","noValidate","as","md","name","value","onChange","Feedback","isInvalid","CreateGift","Img","NavigationBar","Navbar","collapseOnSelect","expand","Brand","Toggle","area-controls","Collapse","Nav","Link","Footer","ViewGift","Image","sampleCard","Search","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c80a363.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sampleCard.b8be50c7.png\";","import React, { Component } from 'react';\r\nimport { Carousel, Button } from 'react-bootstrap';\r\nimport img1 from '../assets/pic1.jpg';\r\nimport img2 from '../assets/pic2.png';\r\nimport img3 from '../assets/pic3.jpg';\r\nimport '../css/carousel.css';\r\n\r\nexport const ImgCarousel = () => (\r\n    <Carousel>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img1}\r\n                alt=\"First Slide\" />\r\n            <Carousel.Caption>\r\n                <h2 id=\"h2_car\">Give a gift worth giving</h2>\r\n                <p id=\"p_car\">Give your friend a nice present\r\n                </p>\r\n                <Button id=\"car_button\" variant=\"secondary\" size=\"lg\" href=\"/visahackathon/#/login\" active>Make a Gift</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img2}\r\n                alt=\"Second Slide\" />\r\n            <Carousel.Caption>\r\n                <h2 id=\"h2_car\">Your friend wants a gift really bad</h2>\r\n                <p id=\"p_car\">So what are you waiting for?\r\n                </p>\r\n                <Button id=\"car_button\" variant=\"secondary\" size=\"lg\" href=\"/visahackathon/#/login\" active>I Said Make a Gift</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img3}\r\n                alt=\"Second Slide\" />\r\n            <Carousel.Caption>\r\n                <h2 id=\"h2_car\">Please make a gift</h2>\r\n                <p id=\"p_car\">you can use this button right here\r\n                </p>\r\n                <Button id=\"car_button\" variant=\"secondary\" size=\"lg\" href=\"/visahackathon/#/login\" active>Make a Gift Now</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n    </Carousel>\r\n)","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ImgCarousel } from '../components/imgCarousel';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport '../css/home.css';\r\n\r\nexport const Home = () => (\r\n    <React.Fragment>\r\n        <ImgCarousel />\r\n        <Container fluid>\r\n            <Row>\r\n                <Col id=\"bgColor\">\r\n                </Col>\r\n                <Col id=\"col_home\">\r\n                    <br />\r\n                    <h4>Free Delivery</h4>\r\n                    <br />\r\n                    <p>We will deliver it for free, the fee for delivery... free!</p>\r\n                </Col>\r\n                <Col id=\"col_home\">\r\n                    <br />\r\n                    <h4>Not Illegal</h4>\r\n                    <br />\r\n                    <p>We swear that you won't be investigated if you buy from us ;)</p>\r\n                </Col>\r\n                <Col id=\"col_home\">\r\n                    <br />\r\n                    <h4>Make someone smile!</h4>\r\n                    <br />\r\n                    <p>Who doesn't like free money?</p>\r\n                </Col>\r\n                <Col id=\"bgColor\">\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport '../css/giftManager.css';\r\nimport img1 from '../assets/pic1.jpg'\r\n\r\nclass GiftManager extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div id=\"manage_card\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Gift #1</Card.Title>\r\n                        <Card.Subtitle>Amount Gifted: $30</Card.Subtitle>\r\n                        <Card.Text>\r\n                            <h6>Sent To: Richard</h6>\r\n                            <Button className=\"stretched-link\" id=\"log_button\" variant=\"secondary\" href=\"/visahackathon/#/create\" active>\r\n                            Manage Gift\r\n                            </Button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Gift #2</Card.Title>\r\n                        <Card.Subtitle>Amount Gifted: $70</Card.Subtitle>\r\n                        <Card.Text>\r\n                            <h6>Sending To: Jeremy</h6>\r\n                            <Button className=\"stretched-link\" id=\"log_button\" variant=\"secondary\" href=\"/visahackathon/#/create\" active>\r\n                            Manage Gift\r\n                            </Button>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default GiftManager;","import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport GiftManager from '../components/giftManager';\r\nimport '../css/manageGifts.css';\r\n\r\nexport const ManageGifts = () => (\r\n    <React.Fragment>\r\n        <div id=\"content\">\r\n        <div id=\"top_div\">\r\n            <h2>My Gifts</h2>\r\n            <Button id=\"create_button\" variant=\"secondary\" size=\"md\" href=\"/visahackathon/#/create\" active>Create New Gift</Button>{' '}\r\n        </div>\r\n        <GiftManager/>\r\n        </div>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport '../css/login.css';\r\n\r\nexport const Login = () => (\r\n    <React.Fragment>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col></Col>\r\n                <Col id=\"col_login\">\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Form>\r\n                        <h2>Login</h2>\r\n                        <Form.Group controlId=\"formUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"username\" placeholder=\"Enter username or email\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"username\" placeholder=\"Enter password\" />\r\n                        </Form.Group>\r\n                        <Button id=\"log_button\" variant=\"secondary\" type=\"submit\">\r\n                            Login\r\n                </Button>\r\n                        <Form.Group>\r\n                            <Form.Label class=\"text-muted mt-3 mr-3\">Don't have an account?</Form.Label>\r\n                            <Button id=\"log_button\" href=\"/visahackathon/#/register\" variant=\"secondary\" type=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Col></Col>\r\n                <Row>\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport { Form, Button, Container, Row, Col, InputGroup } from 'react-bootstrap';\r\nimport '../css/register.css';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup'\r\n\r\n\r\nconst schema = yup.object({\r\n    firstName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    email: yup.string().required(\"Email is required\").email(\"Must be a valid email\"),\r\n    dob: yup.string().required(\"DOB is required\"),\r\n    phone: yup.string().required(\"Phone is required\"),\r\n    password: yup.string().required(\"Password is required\"),\r\n    confirmPassword: yup.string().required(\"You must confirm your password\").oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\nexport const Register = () => (\r\n    <React.Fragment>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col></Col>\r\n                <Col id=\"col_register\">\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Formik\r\n                        validationSchema={schema}\r\n                        onSubmit={console.log}\r\n                        initialValues={{\r\n                            firstName: '',\r\n                            lastName: '',\r\n                        }}\r\n                    >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            values,\r\n                            touched,\r\n                            isValid,\r\n                            errors,\r\n                        }) => (\r\n                                <Form noValidate onSubmit={handleSubmit}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                                            <Form.Label>First name</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"First name\"\r\n                                                name=\"firstName\"\r\n                                                value={values.firstName}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.firstName && !errors.firstName}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik02\">\r\n                                            <Form.Label>Last name</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last name\"\r\n                                                name=\"lastName\"\r\n                                                value={values.lastName}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.lastName && !errors.lastName}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                value={values.email}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.email && !errors.email}\r\n                                                isInvalid={touched.email && !!errors.email}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.email}\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik04\">\r\n                                            <Form.Label>Date of Birth (MM-DD-YYYY)</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Date of Birth\"\r\n                                                name=\"dob\"\r\n                                                value={values.dob}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.dob && !errors.dob}\r\n                                                isInvalid={touched.dob && !!errors.dob}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.dob}\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik05\">\r\n                                            <Form.Label>Phone #</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Phone #\"\r\n                                                name=\"phone\"\r\n                                                value={values.phone}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.phone && !errors.phone}\r\n                                                isInvalid={touched.phone && !!errors.phone}\r\n                                            />\r\n\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.phone}\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik06\">\r\n                                            <Form.Label>Password</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                value={values.password}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.password && !errors.password}\r\n                                                isInvalid={touched.password && !!errors.password}\r\n                                            />\r\n\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.password}\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik07\">\r\n                                            <Form.Label>Confirm Password</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                name=\"confirmPassword\"\r\n                                                value={values.confirmPassword}\r\n                                                onChange={handleChange}\r\n                                                isValid={touched.confirmPassword && !errors.confirmPassword}\r\n                                                isInvalid={touched.confirmPassword && !!errors.confirmPassword}\r\n                                            />\r\n\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors.confirmPassword}\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button variant=\"secondary\" type=\"submit\">Create Account</Button>\r\n                                </Form>\r\n                            )}\r\n                    </Formik>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport {Button, Row, Col, Form, Card} from 'react-bootstrap';\r\nimport '../css/createGift.css';\r\nimport img1 from '../assets/pic1.jpg';\r\n\r\nexport const CreateGift = () => (\r\n    <React.Fragment>\r\n        <div id=\"create_div\">\r\n            <h2>Create Gift</h2>\r\n            <Form >\r\n                <Form.Group>\r\n                    <h6>Gift Name</h6>\r\n                    <Form.Control placeholder=\"Enter gift name\"></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <h6>Recipient Name</h6>\r\n                    <Form.Control placeholder=\"Enter gift name\"></Form.Control>\r\n                </Form.Group>\r\n                <Row>\r\n                    <Col>\r\n                        <Card id=\"img\">\r\n                            <Card.Body>\r\n                                <Card.Img src={img1}/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Button id=\"create_gift_button\" variant=\"secondary\" size=\"lg\">\r\n                                Choose Template\r\n                            </Button>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button id=\"create_gift_button\" variant=\"secondary\" size=\"lg\">\r\n                                Edit Card\r\n                            </Button>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button id=\"next_button\" variant=\"secondary\" size=\"lg\">\r\n                                Next<i className=\"arrow right\"></i>\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport '../css/navigationBar.css';\r\n\r\nexport const NavigationBar = () => (\r\n    <Navbar className=\"sticky-top\" collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/visahackathon/#/\">Signed Gift</Navbar.Brand>\r\n        <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/\">Home</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/my-gifts\">My Gifts</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/search\">Search Gifts</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/login\">Login</Nav.Link></Nav.Item>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n)","import React, { Component } from 'react';\r\nimport {Container, Col, Row} from 'react-bootstrap';\r\nimport '../css/footer.css';\r\n\r\nexport const Footer = () => (\r\n    <React.Fragment>\r\n        <Container fluid id=\"footer\">\r\n            <Row>\r\n                <Col id=\"col_foot\">\r\n                    <br/>\r\n                    <p id=\"p_foot\">About us</p>\r\n                </Col>\r\n                <Col id=\"col_foot\">\r\n                    <br/>\r\n                    <p id=\"p_foot\">About us</p>\r\n                </Col>\r\n                <Col id=\"col_foot\">\r\n                    <br/>\r\n                    <p id=\"p_foot\">About us</p>\r\n                </Col>\r\n                <Col id=\"col_foot\">\r\n                    <br/>\r\n                    <p id=\"p_foot\">About us</p>\r\n                </Col>\r\n                <Col id=\"col_foot\">\r\n                    <br/>\r\n                    <p id=\"p_foot\">About us</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport { Container, Button, Row, Col, Image } from 'react-bootstrap';\r\nimport sampleCard from '../assets/sampleCard.png';\r\nimport '../css/viewGift.css';\r\n\r\nexport const ViewGift = () => (\r\n    <React.Fragment>\r\n        <h2>View Gift</h2>\r\n        <h1 className=\"text-center\">Gift Name</h1>\r\n        <h3 id=\"giver-header\" className=\"text-center text-muted\">Gift Created by: Giver Name</h3>\r\n        <div class=\"text-center m-4\">\r\n            <Image id=\"card-img\" src={sampleCard} />\r\n        </div>\r\n        <Row>\r\n            <Col><p class=\"text-right\">26 givers</p></Col>\r\n            <Col><p class=\"text-left\">Opened 6/23/2020</p></Col>\r\n        </Row>\r\n        <div class=\"text-center m-4\">\r\n            Contribute now: <Button variant=\"outline-secondary\">Click Here!</Button>\r\n        </div>\r\n    </React.Fragment >\r\n)","import React, { Component } from 'react';\r\nimport { Form, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport '../css/search.css';\r\n\r\n\r\nexport const Search = () => (\r\n    <React.Fragment>\r\n        <div id=\"top_div\">\r\n            <h2>Search</h2>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Control type=\"search\" placeholder=\"Search gifts\" />\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    </React.Fragment >\r\n)","import React, { Component } from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { Home } from './pages/home';\r\nimport { ManageGifts } from './pages/manageGifts';\r\nimport { Login } from './pages/login';\r\nimport { Register } from './pages/register';\r\nimport { CreateGift } from './pages/createGift';\r\nimport { NavigationBar } from './components/navigationBar';\r\nimport { Footer } from './components/footer';\r\nimport { ViewGift } from './pages/viewGift';\r\nimport './App.css';\r\nimport { Search } from './pages/search';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavigationBar />\r\n        <HashRouter>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/my-gifts\" component={ManageGifts} />\r\n          <Route path=\"/create\" component={CreateGift} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/view\" component={ViewGift} />\r\n          <Route path=\"/search\" component={Search} />\r\n        </HashRouter>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pic1.463d792e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.ae0c07b6.png\";","module.exports = __webpack_public_path__ + \"static/media/pic3.aa9337f7.jpg\";"],"sourceRoot":""}